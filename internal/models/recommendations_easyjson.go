// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
	go_uuid "github.com/satori/go.uuid"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels(in *jlexer.Lexer, out *UserActivityStore) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "product":
			(out.Product).UnmarshalEasyJSON(in)
		case "category":
			(out.Category).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels(out *jwriter.Writer, in UserActivityStore) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"product\":"
		out.RawString(prefix[1:])
		(in.Product).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		(in.Category).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserActivityStore) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserActivityStore) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserActivityStore) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserActivityStore) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels(l, v)
}
func easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels1(in *jlexer.Lexer, out *UserActivity) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "product":
			(out.Product).UnmarshalEasyJSON(in)
		case "category":
			(out.Category).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels1(out *jwriter.Writer, in UserActivity) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"product\":"
		out.RawString(prefix[1:])
		(in.Product).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"category\":"
		out.RawString(prefix)
		(in.Category).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserActivity) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserActivity) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserActivity) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserActivity) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels1(l, v)
}
func easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels2(in *jlexer.Lexer, out *ProductStatisticSlice) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(ProductStatisticSlice, 0, 2)
			} else {
				*out = ProductStatisticSlice{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v1 ProductStatistic
			(v1).UnmarshalEasyJSON(in)
			*out = append(*out, v1)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels2(out *jwriter.Writer, in ProductStatisticSlice) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v2, v3 := range in {
			if v2 > 0 {
				out.RawByte(',')
			}
			(v3).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ProductStatisticSlice) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ProductStatisticSlice) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ProductStatisticSlice) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ProductStatisticSlice) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels2(l, v)
}
func easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels3(in *jlexer.Lexer, out *ProductStatisticMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
	} else {
		in.Delim('{')
		*out = make(ProductStatisticMap)
		for !in.IsDelim('}') {
			var key go_uuid.UUID
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError(key.UnmarshalText(data))
			}
			in.WantColon()
			var v4 ProductStatistic
			(v4).UnmarshalEasyJSON(in)
			(*out)[key] = v4
			in.WantComma()
		}
		in.Delim('}')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels3(out *jwriter.Writer, in ProductStatisticMap) {
	if in == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
		out.RawString(`null`)
	} else {
		out.RawByte('{')
		v5First := true
		for v5Name, v5Value := range in {
			if v5First {
				v5First = false
			} else {
				out.RawByte(',')
			}
			out.RawText((v5Name).MarshalText())
			out.RawByte(':')
			(v5Value).MarshalEasyJSON(out)
		}
		out.RawByte('}')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v ProductStatisticMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ProductStatisticMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ProductStatisticMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ProductStatisticMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels3(l, v)
}
func easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels4(in *jlexer.Lexer, out *ProductStatistic) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "productId":
			if data := in.UnsafeBytes(); in.Ok() {
				in.AddError((out.ProductID).UnmarshalText(data))
			}
		case "activityPoints":
			out.ActivityPoints = int64(in.Int64())
		case "isBought":
			out.IsBought = bool(in.Bool())
		case "isReviewed":
			out.IsReviewed = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels4(out *jwriter.Writer, in ProductStatistic) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"productId\":"
		out.RawString(prefix[1:])
		out.RawText((in.ProductID).MarshalText())
	}
	{
		const prefix string = ",\"activityPoints\":"
		out.RawString(prefix)
		out.Int64(int64(in.ActivityPoints))
	}
	{
		const prefix string = ",\"isBought\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsBought))
	}
	{
		const prefix string = ",\"isReviewed\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsReviewed))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v ProductStatistic) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v ProductStatistic) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *ProductStatistic) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *ProductStatistic) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels4(l, v)
}
func easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels5(in *jlexer.Lexer, out *CategoryStatisticSlice) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
		*out = nil
	} else {
		in.Delim('[')
		if *out == nil {
			if !in.IsDelim(']') {
				*out = make(CategoryStatisticSlice, 0, 4)
			} else {
				*out = CategoryStatisticSlice{}
			}
		} else {
			*out = (*out)[:0]
		}
		for !in.IsDelim(']') {
			var v6 CategoryStatistic
			(v6).UnmarshalEasyJSON(in)
			*out = append(*out, v6)
			in.WantComma()
		}
		in.Delim(']')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels5(out *jwriter.Writer, in CategoryStatisticSlice) {
	if in == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v7, v8 := range in {
			if v7 > 0 {
				out.RawByte(',')
			}
			(v8).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v CategoryStatisticSlice) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CategoryStatisticSlice) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CategoryStatisticSlice) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CategoryStatisticSlice) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels5(l, v)
}
func easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels6(in *jlexer.Lexer, out *CategoryStatisticMap) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		in.Skip()
	} else {
		in.Delim('{')
		*out = make(CategoryStatisticMap)
		for !in.IsDelim('}') {
			key := int64(in.Int64Str())
			in.WantColon()
			var v9 CategoryStatistic
			(v9).UnmarshalEasyJSON(in)
			(*out)[key] = v9
			in.WantComma()
		}
		in.Delim('}')
	}
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels6(out *jwriter.Writer, in CategoryStatisticMap) {
	if in == nil && (out.Flags&jwriter.NilMapAsEmpty) == 0 {
		out.RawString(`null`)
	} else {
		out.RawByte('{')
		v10First := true
		for v10Name, v10Value := range in {
			if v10First {
				v10First = false
			} else {
				out.RawByte(',')
			}
			out.Int64Str(int64(v10Name))
			out.RawByte(':')
			(v10Value).MarshalEasyJSON(out)
		}
		out.RawByte('}')
	}
}

// MarshalJSON supports json.Marshaler interface
func (v CategoryStatisticMap) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CategoryStatisticMap) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CategoryStatisticMap) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CategoryStatisticMap) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels6(l, v)
}
func easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels7(in *jlexer.Lexer, out *CategoryStatistic) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "categoryId":
			out.CategoryID = int64(in.Int64())
		case "activityPoints":
			out.ActivityPoints = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels7(out *jwriter.Writer, in CategoryStatistic) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"categoryId\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.CategoryID))
	}
	{
		const prefix string = ",\"activityPoints\":"
		out.RawString(prefix)
		out.Int64(int64(in.ActivityPoints))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CategoryStatistic) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CategoryStatistic) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson3711ab1aEncodeGithubComGoParkMailRu20232PotatikiInternalModels7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CategoryStatistic) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CategoryStatistic) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson3711ab1aDecodeGithubComGoParkMailRu20232PotatikiInternalModels7(l, v)
}
